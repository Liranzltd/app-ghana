<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Payment extends \AppBundle\Entity\Payment implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'mode', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'amount', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'transactionTime', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'gatewayTransactionCode', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'transactionId', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'requiredDocuments', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'companies', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'company', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'remarks', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'createdAt', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'updatedAt', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'status', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'paymentReference', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'promoCode', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'recordedBy'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'mode', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'amount', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'transactionTime', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'gatewayTransactionCode', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'transactionId', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'requiredDocuments', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'companies', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'company', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'remarks', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'createdAt', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'updatedAt', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'status', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'paymentReference', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'promoCode', '' . "\0" . 'AppBundle\\Entity\\Payment' . "\0" . 'recordedBy'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Payment $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMode($mode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMode', [$mode]);

        return parent::setMode($mode);
    }

    /**
     * {@inheritDoc}
     */
    public function getMode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMode', []);

        return parent::getMode();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', [$amount]);

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', []);

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionTime($transactionTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionTime', [$transactionTime]);

        return parent::setTransactionTime($transactionTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionTime', []);

        return parent::getTransactionTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setGatewayTransactionCode($gatewayTransactionCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGatewayTransactionCode', [$gatewayTransactionCode]);

        return parent::setGatewayTransactionCode($gatewayTransactionCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getGatewayTransactionCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGatewayTransactionCode', []);

        return parent::getGatewayTransactionCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionId($transactionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionId', [$transactionId]);

        return parent::setTransactionId($transactionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionId', []);

        return parent::getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function addRequiredDocument(\AppBundle\Entity\CompanyTypeDocumentation $requiredDocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRequiredDocument', [$requiredDocument]);

        return parent::addRequiredDocument($requiredDocument);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRequiredDocument(\AppBundle\Entity\CompanyTypeDocumentation $requiredDocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRequiredDocument', [$requiredDocument]);

        return parent::removeRequiredDocument($requiredDocument);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequiredDocuments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequiredDocuments', []);

        return parent::getRequiredDocuments();
    }

    /**
     * {@inheritDoc}
     */
    public function addCompany(\AppBundle\Entity\Company $company)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCompany', [$company]);

        return parent::addCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCompany(\AppBundle\Entity\Company $company)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCompany', [$company]);

        return parent::removeCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanies', []);

        return parent::getCompanies();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany(\AppBundle\Entity\Company $company = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', [$company]);

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', []);

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemarks($remarks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemarks', [$remarks]);

        return parent::setRemarks($remarks);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemarks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemarks', []);

        return parent::getRemarks();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAtValue', []);

        return parent::setCreatedAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAtValue', []);

        return parent::setUpdatedAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentReference($paymentReference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentReference', [$paymentReference]);

        return parent::setPaymentReference($paymentReference);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentReference', []);

        return parent::getPaymentReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromoCode(\AppBundle\Entity\PromoCode $promoCode = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromoCode', [$promoCode]);

        return parent::setPromoCode($promoCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromoCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromoCode', []);

        return parent::getPromoCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecordedBy(\AppBundle\Entity\Staff $recordedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecordedBy', [$recordedBy]);

        return parent::setRecordedBy($recordedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecordedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecordedBy', []);

        return parent::getRecordedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
