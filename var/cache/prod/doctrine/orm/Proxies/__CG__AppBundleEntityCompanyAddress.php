<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CompanyAddress extends \AppBundle\Entity\CompanyAddress implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'buildingNumber', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'buildingName', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'street', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'town', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'country', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'postalAddress', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'postalCode', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'plotNo', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'createdAt', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'updatedAt', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'company', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'counties', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'county', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'region', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'predominantLandmark'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'buildingNumber', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'buildingName', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'street', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'town', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'country', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'postalAddress', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'postalCode', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'plotNo', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'createdAt', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'updatedAt', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'company', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'counties', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'county', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'region', '' . "\0" . 'AppBundle\\Entity\\CompanyAddress' . "\0" . 'predominantLandmark'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CompanyAddress $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setBuildingNumber($buildingNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBuildingNumber', [$buildingNumber]);

        return parent::setBuildingNumber($buildingNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getBuildingNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBuildingNumber', []);

        return parent::getBuildingNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setBuildingName($buildingName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBuildingName', [$buildingName]);

        return parent::setBuildingName($buildingName);
    }

    /**
     * {@inheritDoc}
     */
    public function getBuildingName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBuildingName', []);

        return parent::getBuildingName();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreet($street)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreet', [$street]);

        return parent::setStreet($street);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreet', []);

        return parent::getStreet();
    }

    /**
     * {@inheritDoc}
     */
    public function setTown($town)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTown', [$town]);

        return parent::setTown($town);
    }

    /**
     * {@inheritDoc}
     */
    public function getTown()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTown', []);

        return parent::getTown();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostalAddress($postalAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostalAddress', [$postalAddress]);

        return parent::setPostalAddress($postalAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostalAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostalAddress', []);

        return parent::getPostalAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostalCode($postalCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostalCode', [$postalCode]);

        return parent::setPostalCode($postalCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostalCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostalCode', []);

        return parent::getPostalCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlotNo($plotNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlotNo', [$plotNo]);

        return parent::setPlotNo($plotNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlotNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlotNo', []);

        return parent::getPlotNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany(\AppBundle\Entity\Company $company = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', [$company]);

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', []);

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setCounties(\AppBundle\Entity\County $counties = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCounties', [$counties]);

        return parent::setCounties($counties);
    }

    /**
     * {@inheritDoc}
     */
    public function getCounties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCounties', []);

        return parent::getCounties();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAtValue', []);

        return parent::setCreatedAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAtValue', []);

        return parent::setUpdatedAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setCounty(\AppBundle\Entity\County $county = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCounty', [$county]);

        return parent::setCounty($county);
    }

    /**
     * {@inheritDoc}
     */
    public function getCounty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCounty', []);

        return parent::getCounty();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegion(\AppBundle\Entity\Province $region = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegion', [$region]);

        return parent::setRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegion', []);

        return parent::getRegion();
    }

    /**
     * {@inheritDoc}
     */
    public function setPredominantLandmark($predominantLandmark = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPredominantLandmark', [$predominantLandmark]);

        return parent::setPredominantLandmark($predominantLandmark);
    }

    /**
     * {@inheritDoc}
     */
    public function getPredominantLandmark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPredominantLandmark', []);

        return parent::getPredominantLandmark();
    }

}
