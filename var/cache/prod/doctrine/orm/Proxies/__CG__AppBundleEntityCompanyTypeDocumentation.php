<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CompanyTypeDocumentation extends \AppBundle\Entity\CompanyTypeDocumentation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'companyType', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'isRequired', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'multiple', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'expires', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'documentType', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'systemGenerated', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'hasUpload', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'requiresUpload'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'companyType', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'isRequired', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'multiple', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'expires', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'documentType', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'systemGenerated', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'hasUpload', '' . "\0" . 'AppBundle\\Entity\\CompanyTypeDocumentation' . "\0" . 'requiresUpload'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CompanyTypeDocumentation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyType(\AppBundle\Entity\CompanyType $companyType = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyType', [$companyType]);

        return parent::setCompanyType($companyType);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyType', []);

        return parent::getCompanyType();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsRequired($isRequired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsRequired', [$isRequired]);

        return parent::setIsRequired($isRequired);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsRequired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsRequired', []);

        return parent::getIsRequired();
    }

    /**
     * {@inheritDoc}
     */
    public function setMultiple($multiple)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMultiple', [$multiple]);

        return parent::setMultiple($multiple);
    }

    /**
     * {@inheritDoc}
     */
    public function getMultiple()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMultiple', []);

        return parent::getMultiple();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpires($expires)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpires', [$expires]);

        return parent::setExpires($expires);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpires()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpires', []);

        return parent::getExpires();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumentType(\AppBundle\Entity\DocumentType $documentType = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumentType', [$documentType]);

        return parent::setDocumentType($documentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentType', []);

        return parent::getDocumentType();
    }

    /**
     * {@inheritDoc}
     */
    public function setSystemGenerated($systemGenerated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSystemGenerated', [$systemGenerated]);

        return parent::setSystemGenerated($systemGenerated);
    }

    /**
     * {@inheritDoc}
     */
    public function getSystemGenerated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSystemGenerated', []);

        return parent::getSystemGenerated();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasUpload($hasUpload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasUpload', [$hasUpload]);

        return parent::setHasUpload($hasUpload);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasUpload', []);

        return parent::getHasUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequiresUpload($requiresUpload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequiresUpload', [$requiresUpload]);

        return parent::setRequiresUpload($requiresUpload);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequiresUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequiresUpload', []);

        return parent::getRequiresUpload();
    }

}
