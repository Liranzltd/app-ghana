<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'twig' shared service.

$this->services['twig'] = $instance = new \Twig\Environment(${($_ = isset($this->services['twig.loader']) ? $this->services['twig.loader'] : $this->load('getTwig_LoaderService.php')) && false ?: '_'}, ['form_themes' => [0 => 'form_div_layout.html.twig', 1 => '@SonataUser/Form/form_admin_fields.html.twig', 2 => 'SonataCoreBundle:Form:datepicker.html.twig'], 'paths' => [($this->targetDirs[3].'\\vendor\\knplabs\\knp-menu\\src\\Knp\\Menu/Resources/views') => NULL], 'debug' => false, 'strict_variables' => false, 'cache' => false, 'exception_controller' => 'twig.controller.exception:showAction', 'autoescape' => 'name', 'charset' => 'UTF-8', 'default_path' => ($this->targetDirs[3].'/templates'), 'date' => ['format' => 'F j, Y H:i', 'interval_format' => '%d days', 'timezone' => NULL], 'number_format' => ['decimals' => 0, 'decimal_point' => '.', 'thousands_separator' => ',']]);

$a = ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())) && false ?: '_'};
$b = new \Knp\Menu\Util\MenuManipulator();
$c = ${($_ = isset($this->services['knp_menu.matcher']) ? $this->services['knp_menu.matcher'] : $this->load('getKnpMenu_MatcherService.php')) && false ?: '_'};
$d = new \Symfony\Bridge\Twig\AppVariable();
$d->setEnvironment('prod');
$d->setDebug(false);
if ($this->has('security.token_storage')) {
    $d->setTokenStorage(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())) && false ?: '_'});
}
if ($this->has('request_stack')) {
    $d->setRequestStack($a);
}

$instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension(${($_ = isset($this->services['security.logout_url_generator']) ? $this->services['security.logout_url_generator'] : $this->getSecurity_LogoutUrlGeneratorService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension(${($_ = isset($this->services['security.authorization_checker']) ? $this->services['security.authorization_checker'] : $this->getSecurity_AuthorizationCheckerService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension(${($_ = isset($this->services['translator.default']) ? $this->services['translator.default'] : $this->getTranslator_DefaultService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension(${($_ = isset($this->services['assets.packages']) ? $this->services['assets.packages'] : $this->load('getAssets_PackagesService.php')) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : ($this->services['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))) && false ?: '_'}, ($this->targetDirs[3].'\\app'), 'UTF-8'));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension(${($_ = isset($this->services['router']) ? $this->services['router'] : $this->getRouterService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension(${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : ($this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))) && false ?: '_'}, false));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($a, ${($_ = isset($this->services['router.request_context']) ? $this->services['router.request_context'] : $this->getRouter_RequestContextService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension([0 => $this, 1 => 'twig.form.renderer']));
$instance->addExtension(new \AppBundle\Twig\Extension\FileExtension());
$instance->addExtension(${($_ = isset($this->services['twig.extension.sortbyfield']) ? $this->services['twig.extension.sortbyfield'] : ($this->services['twig.extension.sortbyfield'] = new \Snilius\Twig\SortByFieldExtension())) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['app.twig.extension.date']) ? $this->services['app.twig.extension.date'] : $this->load('getApp_Twig_Extension_DateService.php')) && false ?: '_'});
$instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
$instance->addExtension(${($_ = isset($this->services['sonata.core.flashmessage.twig.extension']) ? $this->services['sonata.core.flashmessage.twig.extension'] : ($this->services['sonata.core.flashmessage.twig.extension'] = new \Sonata\Twig\Extension\FlashMessageExtension())) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['sonata.core.twig.extension.wrapping']) ? $this->services['sonata.core.twig.extension.wrapping'] : ($this->services['sonata.core.twig.extension.wrapping'] = new \Sonata\Twig\Extension\FormTypeExtension('standard'))) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['sonata.core.twig.extension.text']) ? $this->services['sonata.core.twig.extension.text'] : ($this->services['sonata.core.twig.extension.text'] = new \Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension())) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['sonata.core.twig.status_extension']) ? $this->services['sonata.core.twig.status_extension'] : ($this->services['sonata.core.twig.status_extension'] = new \Sonata\CoreBundle\Twig\Extension\StatusExtension())) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['sonata.core.twig.deprecated_template_extension']) ? $this->services['sonata.core.twig.deprecated_template_extension'] : ($this->services['sonata.core.twig.deprecated_template_extension'] = new \Sonata\Twig\Extension\DeprecatedTemplateExtension())) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['sonata.core.twig.template_extension']) ? $this->services['sonata.core.twig.template_extension'] : $this->load('getSonata_Core_Twig_TemplateExtensionService.php')) && false ?: '_'});
$instance->addExtension(new \Sonata\BlockBundle\Twig\Extension\BlockExtension(${($_ = isset($this->services['sonata.block.templating.helper']) ? $this->services['sonata.block.templating.helper'] : $this->load('getSonata_Block_Templating_HelperService.php')) && false ?: '_'}));
$instance->addExtension(new \Knp\Menu\Twig\MenuExtension(new \Knp\Menu\Twig\Helper(${($_ = isset($this->services['knp_menu.renderer_provider']) ? $this->services['knp_menu.renderer_provider'] : $this->load('getKnpMenu_RendererProviderService.php')) && false ?: '_'}, ${($_ = isset($this->services['knp_menu.menu_provider']) ? $this->services['knp_menu.menu_provider'] : $this->load('getKnpMenu_MenuProviderService.php')) && false ?: '_'}, $b, $c), $c, $b));
$instance->addExtension(${($_ = isset($this->services['sonata.admin.twig.extension']) ? $this->services['sonata.admin.twig.extension'] : $this->load('getSonata_Admin_Twig_ExtensionService.php')) && false ?: '_'});
$instance->addExtension(new \Sonata\AdminBundle\Twig\Extension\TemplateRegistryExtension(${($_ = isset($this->services['sonata.admin.global_template_registry']) ? $this->services['sonata.admin.global_template_registry'] : $this->load('getSonata_Admin_GlobalTemplateRegistryService.php')) && false ?: '_'}, $this));
$instance->addExtension(new \Sonata\UserBundle\Twig\RolesMatrixExtension(${($_ = isset($this->services['sonata.user.matrix_roles_builder']) ? $this->services['sonata.user.matrix_roles_builder'] : $this->load('getSonata_User_MatrixRolesBuilderService.php')) && false ?: '_'}));
$instance->addExtension(${($_ = isset($this->services['ivory_ck_editor.twig_extension']) ? $this->services['ivory_ck_editor.twig_extension'] : $this->load('getIvoryCkEditor_TwigExtensionService.php')) && false ?: '_'});
$instance->addExtension(new \Symfony\Bundle\AsseticBundle\Twig\AsseticExtension(${($_ = isset($this->services['assetic.asset_factory']) ? $this->services['assetic.asset_factory'] : $this->load('getAssetic_AssetFactoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['templating.name_parser']) ? $this->services['templating.name_parser'] : ($this->services['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel', 1)) && false ?: '_'}))) && false ?: '_'}, false, [], $this->parameters['assetic.bundles'], new \Symfony\Bundle\AsseticBundle\DefaultValueSupplier($this)));
$instance->addExtension(new \HWI\Bundle\OAuthBundle\Twig\Extension\OAuthExtension(${($_ = isset($this->services['hwi_oauth.templating.helper.oauth']) ? $this->services['hwi_oauth.templating.helper.oauth'] : $this->load('getHwiOauth_Templating_Helper_OauthService.php')) && false ?: '_'}));
$instance->addGlobal('app', $d);
$instance->addRuntimeLoader(new \Twig\RuntimeLoader\ContainerRuntimeLoader(new \Symfony\Component\DependencyInjection\ServiceLocator(['Sonata\\Twig\\Extension\\FlashMessageRuntime' => function () {
    return ${($_ = isset($this->services['sonata.core.flashmessage.twig.runtime']) ? $this->services['sonata.core.flashmessage.twig.runtime'] : $this->load('getSonata_Core_Flashmessage_Twig_RuntimeService.php')) && false ?: '_'};
}, 'Sonata\\Twig\\Extension\\StatusRuntime' => function () {
    return ${($_ = isset($this->services['sonata.core.twig.status_runtime']) ? $this->services['sonata.core.twig.status_runtime'] : $this->load('getSonata_Core_Twig_StatusRuntimeService.php')) && false ?: '_'};
}, 'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => function () {
    return ${($_ = isset($this->services['twig.runtime.httpkernel']) ? $this->services['twig.runtime.httpkernel'] : $this->load('getTwig_Runtime_HttpkernelService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\FormRenderer' => function () {
    return ${($_ = isset($this->services['twig.form.renderer']) ? $this->services['twig.form.renderer'] : $this->load('getTwig_Form_RendererService.php')) && false ?: '_'};
}])));
$instance->addGlobal('local_supplier_registration', 236.25);
$instance->addGlobal('international_supplier_registration', 945.0);
$instance->addGlobal('sonata_block', ${($_ = isset($this->services['sonata.block.twig.global']) ? $this->services['sonata.block.twig.global'] : ($this->services['sonata.block.twig.global'] = new \Sonata\BlockBundle\Twig\GlobalVariables(['block_base' => '@SonataBlock/Block/block_base.html.twig', 'block_container' => '@SonataBlock/Block/block_container.html.twig']))) && false ?: '_'});
$instance->addGlobal('sonata_admin', ${($_ = isset($this->services['sonata.admin.twig.global']) ? $this->services['sonata.admin.twig.global'] : $this->load('getSonata_Admin_Twig_GlobalService.php')) && false ?: '_'});
$instance->addGlobal('sonata_user', new \Sonata\UserBundle\Twig\GlobalVariables($this));
(new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','))->configure($instance);

return $instance;
