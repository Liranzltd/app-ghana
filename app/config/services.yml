# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html

    admin.companies:
        class: AppBundle\Admin\CompanyAdmin
        arguments: [~, AppBundle\Entity\Company, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Suppliers, group: Company Information }
        calls:
            - [ setTemplate, [edit, AppBundle:Company:edit.html.twig]]

    admin.company_addresses:
        class: AppBundle\Admin\CompanyAddressAdmin
        arguments: [~, AppBundle\Entity\CompanyAddress, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company Address, group: Company Information, show_in_dashboard: false }

    admin.company_contacts:
        class: AppBundle\Admin\CompanyContactAdmin
        arguments: [~, AppBundle\Entity\CompanyContact, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company Contacts, group: Company Information }

    admin.company_documents:
        class: AppBundle\Admin\CompanyDocumentationAdmin
        arguments: [~, AppBundle\Entity\CompanyDocumentation, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Document Repository, group: Company Information }

    admin.documents_types:
        class: AppBundle\Admin\DocumentTypeAdmin
        arguments: [~, AppBundle\Entity\DocumentType, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Document Types, group: Company Information }

    admin.company_directors:
        class: AppBundle\Admin\CompanyDirectorAdmin
        arguments: [~, AppBundle\Entity\CompanyDirector, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company Directors, group: Company Information,show_in_dashboard: false }

    admin.company_shareholding:
        class: AppBundle\Admin\CompanyShareholdingAdmin
        arguments: [~, AppBundle\Entity\CompanyShareholding, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company Shareholding, group: Company Information,show_in_dashboard: false }

    admin.company_types:
        class: AppBundle\Admin\CompanyTypeAdmin
        arguments: [~, AppBundle\Entity\CompanyType, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company Types, group: Company Information }

    admin.company_type_documentation:
        class: AppBundle\Admin\CompanyTypeDocumentationAdmin
        arguments: [~, AppBundle\Entity\CompanyTypeDocumentation, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company Types Documentation, group: Company Information,show_in_dashboard: false}

    admin.company_references:
        class: AppBundle\Admin\CompanyReferenceAdmin
        arguments: [~, AppBundle\Entity\CompanyReference, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company References, group: Company Information,show_in_dashboard: false}

    admin.buyers:
        class: AppBundle\Admin\BuyerAdmin
        arguments: [~, AppBundle\Entity\Buyer, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Buyers, group: Company Information }

    admin.buyer_membership:
        class: AppBundle\Admin\BuyerMembershipAdmin
        arguments: [~, AppBundle\Entity\BuyerMembership, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Buyer Membership, group: Company Information,show_in_dashboard: false}

    admin.members:
        class: AppBundle\Admin\MemberAdmin
        arguments: [~, AppBundle\Entity\Member, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Members, group: Members Information }

    admin.payments:
        class: AppBundle\Admin\PaymentAdmin
        public: true
        arguments: [~, AppBundle\Entity\Payment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Transactions, group: Payment Information }
        calls:
          - [ setTemplate, [edit, AppBundle:Payment:edit.html.twig]]

    admin.payment_modes:
        class: AppBundle\Admin\PaymentModeAdmin
        public: true
        arguments: [~, AppBundle\Entity\PaymentMode, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Payment Modes, group: Payment Information }

    admin.promo_codes:
        class: AppBundle\Admin\PromoCodeAdmin
        arguments: [~, AppBundle\Entity\PromoCode, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Promo Codes, group: Payment Information }

    admin.requests:
        class: AppBundle\Admin\RequestAdmin
        arguments: [~, AppBundle\Entity\Request, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Requests, group: Requests }

    admin.categories:
        class: AppBundle\Admin\CategoryAdmin
        arguments: [~, AppBundle\Entity\Category, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company Sectors, group: Company Information }

    admin.requests_type:
        class: AppBundle\Admin\RequestTypeAdmin
        arguments: [~, AppBundle\Entity\RequestType, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Request Types, group: Requests }

    admin.requests_documents:
        class: AppBundle\Admin\RequestDocumentAdmin
        arguments: [~, AppBundle\Entity\RequestDocument, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Request Documents, group: Requests }

    admin.company_requests:
        class: AppBundle\Admin\CompanyRequestAdmin
        arguments: [~, AppBundle\Entity\CompanyRequest, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Supplier Responses, group: Requests }

    admin.news:
        class: AppBundle\Admin\ArticleAdmin
        arguments: [~, AppBundle\Entity\Article, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: News & Case Studies, group: Website Content }
        calls:
            - [ setTemplate, [edit, AppBundle:Article:edit.html.twig]]

    admin.ujuzi_hub:
        class: AppBundle\Admin\BusinessGrowthHubAdmin
        arguments: [~, AppBundle\Entity\BusinessGrowthHub, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Business Growth Hub, group: Website Content }

    admin.testimonials:
        class: AppBundle\Admin\TestimonialAdmin
        arguments: [~, AppBundle\Entity\Testimonial, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Testimonials, group: Website Content }

    admin.content_categories:
        class: AppBundle\Admin\ContentCategoryAdmin
        arguments: [~, AppBundle\Entity\ContentCategory, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Content Categories, group: Website Content }

    # admin.crb_checks:
    #     class: AppBundle\Admin\CrbCheckAdmin
    #     arguments: [~, AppBundle\Entity\CrbCheck, ~]
    #     public: true
    #     tags:
    #         - { name: sonata.admin, manager_type: orm, label: CRB Checks Performed, group: Verification}

    admin.verification_stages:
        class: AppBundle\Admin\VerificationStageAdmin
        arguments: [~, AppBundle\Entity\VerificationStage, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Verification Procedures, group: Verification}

    admin.verification_step:
        class: AppBundle\Admin\VerificationStepAdmin
        arguments: [~, AppBundle\Entity\VerificationStep, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Verification Steps, group: Verification,show_in_dashboard: false}

    admin.company_verification:
        class: AppBundle\Admin\CompanyVerificationAdmin
        arguments: [~, AppBundle\Entity\CompanyVerification, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Company Verification, group: Verification,show_in_dashboard: false}

    admin.staff:
        class: AppBundle\Admin\StaffAdmin
        arguments: [~, AppBundle\Entity\Staff, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, group: Staff Information, label: IIA Staff }

    admin.user_guide.topic:
        class: AppBundle\Admin\UserGuideTopicAdmin
        arguments: [~, AppBundle\Entity\UserGuideTopic, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, group: User Guide, label: User Guide Topics }

    admin.user_guide.content:
        class: AppBundle\Admin\UserGuideAdmin
        arguments: [~, AppBundle\Entity\UserGuide, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, group: User Guide, label: User Guide Content }

    admin.tiers:
        class: AppBundle\Admin\TierAdmin
        arguments: [~, AppBundle\Entity\Tier, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tiers, group: Company Information}

    admin.tierBenefits:
        class: AppBundle\Admin\TierBenefitAdmin
        arguments: [~, AppBundle\Entity\TierBenefit, ~]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tier Benefits, group: Company Information,show_in_dashboard: false}

    # admin.designation:
    #     class: AppBundle\Admin\DesignationAdmin
    #     arguments: [~, AppBundle\Entity\Designation, ~]
    #     tags:
    #         - { name: sonata.admin, manager_type: orm, group: Staff Information, label: Designation Information }

    # admin.tasks:
    #     class: AppBundle\Admin\TaskAdmin
    #     arguments: [~, AppBundle\Entity\Task, ~]
    #     tags:
    #         - { name: sonata.admin, manager_type: orm, label: Tasks, group: Relationship Management }
    #
    # admin.cases:
    #     class: AppBundle\Admin\CaseAdmin
    #     arguments: [~, AppBundle\Entity\Case, ~]
    #     tags:
    #         - { name: sonata.admin, manager_type: orm, label: Cases, group: Relationship Management }

    app.user:
        class: AppBundle\Service\UserService
        arguments:  ['@service_container']
        public: true

    app.notifications:
      class:  AppBundle\Service\NotificationService
      arguments:  ['@service_container']
      public: true

    app.company.service:
      class:  AppBundle\Service\CompanyService
      arguments:  ['@service_container']
      public: true

    app.hivebrite:
      class:  AppBundle\Service\HiveBriteService
      arguments:  ['@service_container']
      public: true

    app.sourcedogg:
      class:  AppBundle\Service\SourceDoggService
      arguments:  ['@service_container']
      public: true

    app.sourcedogg_selenium:
      class:  AppBundle\Service\SourceDoggServiceSelenium
      arguments:  ['@service_container']
      public: true

    app.print_service:
      class:  AppBundle\Service\PrintService
      arguments:  ['@service_container']
      public: true

    app.activity_service:
      class:  AppBundle\Service\ActivityService
      arguments:  ['@service_container']
      public: true

    app.crb_service:
      class:  AppBundle\Service\CRBService
      arguments:  ['@service_container']
      public: true

    sonata.block.dash:
      class:  AppBundle\Block\DashBlock
      arguments:
        -   'sonata.block.dash'
        -   "@templating"
        -   "@service_container"
      public: true
      tags:
        - { name: sonata.block }

    app.post.save:
      class: AppBundle\EventListener\PostSave
      arguments: [ "@service_container"]
      public: true
      tags:
        - { name: doctrine.event_listener, event: postPersist }
        - { name: doctrine.event_listener, event: postUpdate }
        - { name: doctrine.event_listener, event: preUpdate }
        - { name: doctrine.event_listener, event: preRemove }

    app.saml.service_provider_repository:
      class:  AppBundle\Repository\SamlServiceProviderRepository
      public: true

    app.saml.event_subscriber:
      class:  AppBundle\EventSubscriber\SamlSubscriber
      arguments: [ "@security.token_storage"]
      public: true
      tags:
        - {name: kernel.event_listener, event:adactive_sas_saml2.sso_authn_get_response, method:addEmail}

    twig.extension.sortbyfield:
        class: Snilius\Twig\SortByFieldExtension
        public: true
        tags:
            - { name: twig.extension }

    app.command.create_oauth_client:
      class: AppBundle\Command\CreateOauthClientCommand
      arguments: ["@fos_oauth_server.client_manager.default"]
      public: true
      tags:
          -  { name: console.command }

    app.twig.extension.date:
      class:  Twig_Extensions_Extension_Date
      public: true
      tags:
           - { name: 'twig.extension' }

    app.password_resetting:
      class: AppBundle\EventListener\PasswordResettingListener
      arguments: [ "@security.token_storage", "@router" ]
      public: true
      tags:
          - { name: kernel.event_subscriber }

    azure.user_provider:
        class:        AppBundle\Provider\AzureUserProvider
        arguments: ['@fos_user.user_manager', { azure: azure_id }, "@router"]

    azure.oauth_aware.user_provider.service:
      class: HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider
      arguments: ['@fos_user.user_manager',[]]
      public: true

    app.azure:
      class:  AppBundle\Service\AzureService
      arguments:  ['@service_container']
      public: true

    app.oauthfailurehandler:
      class: AppBundle\Provider\OAuthFailureHandler
      arguments: ["@router"]
