<?php

namespace AppBundle\Repository;

/**
 * MemberRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MemberRepository extends \Doctrine\ORM\EntityRepository
{
  public function findMemberRequests($member,$status = null,$applicationStatus = null)
  {
    $sql = 'SELECT r FROM AppBundle:Request r JOIN r.responses cr JOIN cr.company c JOIN c.teamMembers t JOIN t.member m WHERE m.id in (:member) AND r.isPublished = 1 ';
    if($status != null)
    {
      $sql .= 'AND r.status LIKE :status ';
    }
    if($applicationStatus != null)
    {
      $sql .= 'AND cr.status LIKE :applicationStatus ';
    }
    $sql .= 'ORDER BY r.publishDate DESC';
    $q = $this->getEntityManager()->createQuery($sql)->setParameter('member',$member);
    if($status != null)
    {
      $q->setParameter('status',$status);
    }
    if($applicationStatus != null)
    {
      $q->setParameter('applicationStatus',$applicationStatus);
    }
    return $q->getResult();
  }
  public function inRequests($member,$request)
  {
    $rq = $this->getEntityManager()
            ->createQuery(
                'SELECT r FROM AppBundle:Request r JOIN r.responses cr JOIN cr.company c JOIN c.teamMembers t JOIN t.member m WHERE m.id in (:member) AND r.id = :request  AND r.isPublished = 1 ORDER BY r.publishDate DESC'
            )->setParameters(['member' => $member, 'request' => $request->getId()])
            ->getResult();
    return count($rq) > 0 ? true : false;
  }
  public function canBid($member)
  {
    foreach($member->getCompanies() as $company)
    {
      if($company->getSubscriptionStatus() == 'Active')
      {
        return true;
      }
    }
    return false;
  }
}
